apiVersion: apps/v1
kind: Deployment
metadata:
  name: employee-management-system
  labels:
    app: employee-management-system
spec:
  replicas: 3
  selector:
    matchLabels:
      app: employee-management-system
  template:
    metadata:
      labels:
        app: employee-management-system
    spec:
      containers:
      - name: employee-management-system
        image: ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}
        ports:
        - containerPort: 5000
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "5000"
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: employee-management-system-secrets
              key: mongodb-uri
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: employee-management-system-secrets
              key: jwt-secret
        - name: JWT_REFRESH_SECRET
          valueFrom:
            secretKeyRef:
              name: employee-management-system-secrets
              key: jwt-refresh-secret
        - name: CORS_ORIGIN
          valueFrom:
            configMapKeyRef:
              name: employee-management-system-config
              key: cors-origin
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "200m"
            memory: "256Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: employee-management-system
spec:
  selector:
    app: employee-management-system
  ports:
  - port: 80
    targetPort: 5000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: employee-management-system
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - ${DOMAIN_NAME}
    secretName: employee-management-system-tls
  rules:
  - host: ${DOMAIN_NAME}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: employee-management-system
            port:
              number: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: employee-management-system-config
data:
  cors-origin: "https://${DOMAIN_NAME}"
---
apiVersion: v1
kind: Secret
metadata:
  name: employee-management-system-secrets
type: Opaque
data:
  mongodb-uri: ${BASE64_MONGODB_URI}
  jwt-secret: ${BASE64_JWT_SECRET}
  jwt-refresh-secret: ${BASE64_JWT_REFRESH_SECRET}
